name: Dev Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    name: Build Linux
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - target: x86_64
            target_triple: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
            artifact_name: gemini-keychecker
            release_name: gemini-keychecker-linux-x86_64
          - target: aarch64
            target_triple: aarch64-unknown-linux-gnu
            runner: ubuntu-24.04-arm
            artifact_name: gemini-keychecker
            release_name: gemini-keychecker-linux-aarch64
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          targets: ${{ matrix.target_triple }}
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Build for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target_triple }}

      - name: Package artifact
        run: |
          mv target/${{ matrix.target_triple }}/release/${{ matrix.artifact_name }} ${{ matrix.release_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.release_name }}
          path: ${{ matrix.release_name }}
          retention-days: 30

  windows:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - target: x86_64
            target_triple: x86_64-pc-windows-msvc
            artifact_name: gemini-keychecker.exe
            release_name: gemini-keychecker-windows-x86_64
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          targets: ${{ matrix.target_triple }}
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Build for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target_triple }}

      - name: Package artifact
        run: |
          mkdir -p release-package
          mv target/${{ matrix.target_triple }}/release/${{ matrix.artifact_name }} ${{ matrix.release_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.release_name }}
          path: ${{ matrix.release_name }}
          retention-days: 30

  macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - target: x86_64
            target_triple: x86_64-apple-darwin
            artifact_name: gemini-keychecker
            release_name: gemini-keychecker-macos-x86_64
          - target: aarch64
            target_triple: aarch64-apple-darwin
            artifact_name: gemini-keychecker
            release_name: gemini-keychecker-macos-aarch64
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          targets: ${{ matrix.target_triple }}
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Build for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target_triple }}

      - name: Package artifact
        run: |
          mv target/${{ matrix.target_triple }}/release/${{ matrix.artifact_name }} ${{ matrix.release_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.release_name }}
          path: ${{ matrix.release_name }}
          retention-days: 30
