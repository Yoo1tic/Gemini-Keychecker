name: Release

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: gemini-keychecker
            release_name: gemini-keychecker-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: gemini-keychecker.exe
            release_name: gemini-keychecker-windows-x86_64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build project
      run: cargo build --release --target ${{ matrix.target }}

    - name: Upload release assets
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        name: ${{ matrix.release_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}